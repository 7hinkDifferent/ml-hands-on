name: Test Environment Setup

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test imports
      run: |
        python -c "import numpy; print('NumPy version:', numpy.__version__)"
        python -c "import pandas; print('Pandas version:', pandas.__version__)"
        python -c "import matplotlib; print('Matplotlib version:', matplotlib.__version__)"
        python -c "import sklearn; print('Scikit-learn version:', sklearn.__version__)"
        python -c "import torch; print('PyTorch version:', torch.__version__)"
        python -c "import torchvision; print('Torchvision version:', torchvision.__version__)"
    
    - name: Test basic functionality
      run: |
        python -c "
        import numpy as np
        import pandas as pd
        import matplotlib.pyplot as plt
        from sklearn.datasets import make_classification
        import torch
        import torch.nn as nn
        
        # Test NumPy
        arr = np.array([1, 2, 3, 4, 5])
        assert arr.mean() == 3.0
        print('âœ… NumPy test passed')
        
        # Test Pandas
        df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})
        assert len(df) == 3
        print('âœ… Pandas test passed')
        
        # Test Scikit-learn
        X, y = make_classification(n_samples=100, n_features=4, random_state=42)
        assert X.shape == (100, 4)
        print('âœ… Scikit-learn test passed')
        
        # Test PyTorch
        x = torch.tensor([1.0, 2.0, 3.0])
        assert torch.allclose(x.mean(), torch.tensor(2.0))
        print('âœ… PyTorch test passed')
        
        print('ðŸŽ‰ All tests passed!')
        "
